daemon off;
worker_processes 4;

error_log <%= ENV["APP_ROOT"] %>/nginx/logs/error.log;

events {
  use epoll;
  accept_mutex on;
  worker_connections 1024;
}

http {
  log_format cloudfoundry '$http_x_forwarded_for - $http_referer - [$time_local] "$request" $status $body_bytes_sent';
  access_log <%= ENV["APP_ROOT"] %>/nginx/logs/access.log cloudfoundry;
  default_type application/octet-stream;
  include mime.types;
  sendfile on;

  gzip on;
  gzip_disable "msie6";
  gzip_comp_level 6;
  gzip_min_length 1100;
  gzip_buffers 16 8k;
  gzip_proxied any;
  gzip_types text/plain text/css text/js text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/xml+rss;

  tcp_nopush on;
  keepalive_timeout 30;
  port_in_redirect off; # Ensure that redirects don't include the internal container PORT - <%= ENV["PORT"] %>
  server_tokens off;

  server {
    listen <%= ENV["PORT"] %>;
    server_name localhost;

    location /vault {
      set $cors '';
      if ($http_origin ~* 'https?://(localhost|.*\.homedepot\.com)(:[0-9]+)?') {
        set $cors 'true';
      }

      if ($cors = 'true') {
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With' always;
      }
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_buffering off;
      proxy_pass <%= ENV["PROXY_DEST"] %>;

      proxy_http_version 1.1;
      chunked_transfer_encoding off;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Origin "";

    }

    location / {
          root <%= ENV["APP_ROOT"] %>/public;
          index index.html index.htm Default.htm;
          <% if File.exists?(File.join(ENV["APP_ROOT"], "nginx/conf/.enable_directory_index")) %>
          autoindex on;
          <% end %>
          <% if File.exists?(auth_file = File.join(ENV["APP_ROOT"], "nginx/conf/.htpasswd")) %>
          auth_basic "Restricted";                                #For Basic Auth
          auth_basic_user_file <%= auth_file %>;  #For Basic Auth
          <% end %>
          <% if ENV["FORCE_HTTPS"] %>
          if ($http_x_forwarded_proto = http) {
            return 301 https://$host$request_uri;
          }
          <% end %>
     }

  }
}